>>> base_geometry_module = __import__('7-base_geometry')
>>> BaseGeometry = base_geometry_module.BaseGeometry

>>> bg = BaseGeometry()
>>> bg.integer_validator("Age", 10)
>>> bg.integer_validator("Age", "23")
Traceback (most recent call last):
...
TypeError: Age must be an integer
>>> bg.integer_validator("Age", -5)

Traceback (most recent call last):
...
ValueError: Age must be greater than 0

>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

>>> bg.integer_validator("age", 10)

>>> bg.integer_validator("age")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
...
TypeError: age must be an integer


>>> bg.integer_validator("age", True)
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> bg.integer_validator("age", None)
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> bg.integer_validator("Height", 3)
>>> bg.integer_validator("Weight", -1)
Traceback (most recent call last):
...
ValueError: Weight must be greater than 0
>>> bg.integer_validator("Score", "100")
Traceback (most recent call last):
...
TypeError: Score must be an integer
