>>> import importlib.util
>>> spec = importlib.util.spec_from_file_location("my_list", "./1-my_list.py")
>>> my_list = importlib.util.module_from_spec(spec)
>>> spec.loader.exec_module(my_list)
>>> MyList = my_list.MyList

Correct output - case: class creation, multiple appends, regular print and sorted print
>>> my_list = MyList()
>>> my_list.append(5)
>>> my_list.append(3)
>>> my_list.append(9)
>>> my_list.append(1)
>>> print(my_list)
MyList([5, 3, 9, 1])
>>> my_list.print_sorted()
[1, 3, 5, 9]

Correct output - case: class creation, regular print and sorted print
>>> my_list = MyList([10, 4, 7])
>>> print(my_list)
MyList([10, 4, 7])
>>> my_list.print_sorted()
[4, 7, 10]

Correct output - case: class creation, multiple appends (negative number), regular print and sorted print
>>> my_list = MyList()
>>> my_list.append(-2)
>>> my_list.append(8)
>>> my_list.append(1)
>>> print(my_list)
MyList([-2, 8, 1])
>>> my_list.print_sorted()
[-2, 1, 8]

Regular tests passed

Test present: check instantiation
>>> my_list = MyList([3, 1, 2])
>>> isinstance(my_list, MyList)
True

Test present: check inherits from list
>>> isinstance(my_list, list)
True

Test present: check __str__
>>> print(my_list)
MyList([3, 1, 2])

Test present: check append()
>>> my_list.append(7)
>>> print(my_list)
MyList([3, 1, 2, 7])

Test present: check print_sorted() with sorted append
>>> my_list = MyList([1, 2, 3])
>>> my_list.print_sorted()
[1, 2, 3]

Test present: check print_sorted() with not sorted append
>>> my_list = MyList([3, 1, 4])
>>> my_list.print_sorted()
[1, 3, 4]

Test present: check print_sorted() with no sorted append with negative number
>>> my_list = MyList([3, -1, 4])
>>> my_list.print_sorted()
[-1, 3, 4]

Test present: check print_sorted() with empty list
>>> my_list = MyList()
>>> my_list.print_sorted()
[]

Test present: check print_sorted() returns a new list
>>> my_list = MyList([3, 5, 2])
>>> sorted_list = my_list.print_sorted()
[2, 3, 5]
>>> my_list
MyList([3, 5, 2])

Correct output - case: class creation
>>> my_list = MyList()
>>> isinstance(my_list, MyList)
True

Correct output - case: class creation and regular print
>>> my_list = MyList([5, 3, 8])
>>> print(my_list)
MyList([5, 3, 8])

Correct output - case: class creation, append and regular print
>>> my_list = MyList([5, 2])
>>> my_list.append(6)
>>> print(my_list)
MyList([5, 2, 6])

Correct output - case: class creation, append, regular print and sorted print
>>> my_list = MyList([10, 3])
>>> my_list.append(7)
>>> print(my_list)
MyList([10, 3, 7])
>>> my_list.print_sorted()
[3, 7, 10]

Correct output - case: class creation, multiple appends, regular print and sorted print
>>> my_list = MyList()
>>> my_list.append(4)
>>> my_list.append(1)
>>> my_list.append(3)
>>> print(my_list)
MyList([4, 1, 3])
>>> my_list.print_sorted()
[1, 3, 4]

